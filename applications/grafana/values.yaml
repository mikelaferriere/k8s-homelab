---
grafana:
  service:
    type: LoadBalancer

  persistence:
    enabled: true
    type: pvc

  extraVolumes:
    - name: vault-database
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "vault-database"
  extraVolumeMounts:
    - name: vault-database
      mountPath: "/mnt/secrets-store"
      readOnly: true

  sidecar:
    # Beware of crazy JSON :/
    dashboards:
      # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml#L718
      enabled: true

    datasources:
      enabled: true
      initDatasources: true
      skipReload: false
      reloadUrl: http://grafana.monitoring.svc.cluster.local/api/admin/provisioning/datasources/reload

  grafana.ini:
    analytics:
      reporting_enabled: false
      check_for_updates: true

    log:
      mode: console
      level: info

    paths:
      data: /var/lib/grafana/
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning

    #########################################################
    ############ Grafana / Authentik Integration ############
    #########################################################
    server:
      domain: grafana.laferriere.app
      root_url: https://grafana.laferriere.app

    auth:
      signout_redirect_url: https://auth-k8s.laferriere.app/application/o/grafana/end-session/
      # Optionally enable auto-login
      oauth_auto_login: false
      oauth_allow_insecure_email_lookup: true

    users:
      auto_assign_org: true
      auto_assign_org_id: 1

    auth.generic_oauth:
      enabled: true
      name: authentik
      client_id: $__file{/mnt/secrets-store/client_id}
      client_secret: $__file{/mnt/secrets-store/client_secret}
      scopes: openid email profile
      auth_url: https://auth-k8s.laferriere.app/application/o/authorize/
      token_url: https://auth-k8s.laferriere.app/application/o/token/
      api_url: https://auth-k8s.laferriere.app/application/o/userinfo/
      # Optionally map user groups to Grafana roles
      role_attribute_path: contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'

