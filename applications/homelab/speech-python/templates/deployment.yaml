---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      annotations:
        diun.enable: "false"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: internal-app
        # vault.hashicorp.com/agent-inject-secret-defined: kv/data/secrets/homelab
        vault.hashicorp.com/agent-inject-template-init: |
          {{`{{- with secret "kv/data/secrets/homelab" -}}
            {{- range $key, $value := .Data.data }}
            export {{ $key }}={{ $value }}
            {{- end }}
          {{- end }}`}}
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          envFrom:
          - configMapRef:
              name: {{ .Values.app.name }}-config
          image: 10.10.10.199:5000/python/speechv2:latest
          command: ["sh", "-c", ". /vault/secrets/init && flask run -h 0.0.0.0 -p 5000 --with-threads"]
          livenessProbe:
            httpGet:
              port: {{ .Values.app.port }}
              path: /api/v2/speech/status
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          readinessProbe:
            httpGet:
              port: {{ .Values.app.port }}
              path: /api/v2/speech/status
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          startupProbe:
            httpGet:
              port: {{ .Values.app.port }}
              path: /api/v2/speech/status
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          ports:
            - containerPort: {{ .Values.app.port }}
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "100m"
      restartPolicy: Always
status: {}