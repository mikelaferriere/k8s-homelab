---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: internal-app
        # vault.hashicorp.com/agent-inject-secret-defined: kv/data/secrets/homelab
        vault.hashicorp.com/agent-inject-template-init: |
          {{`{{- with secret "kv/data/secrets/homelab" -}}
            {{- range $key, $value := .Data.data }}
            export {{ $key }}={{ $value }}
            {{- end }}
          {{- end }}`}}
      labels:
        app: {{ .Values.app.name }}
    spec:
      initContainers:
        - name: flyway-migrations
          image: 10.10.10.199:5000/migrations/api
          command: 
            - "flyway"
            - "-user=postgres"
            - "-password=postgres"
            - "-locations=migrations"
            - "-url=jdbc:postgresql://postgresql:5432/postgres"
            - "migrate"
      containers:
        - name: {{ .Values.app.name }}
          envFrom:
          - configMapRef:
              name: {{ .Values.app.name }}-config
          image: 10.10.10.199:5000/typescript/nx/{{ .Values.app.name }}:latest
          command: ["sh", "-c", ". /vault/secrets/init && serve -p {{ .Values.app.port }} -s /app"]
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://localhost:{{ .Values.app.port }}
            failureThreshold: 5
            periodSeconds: 30
            timeoutSeconds: 10
          ports:
            - containerPort: {{ .Values.app.port }}
          resources:
            requests:
              memory: "750Mi"
              cpu: "1000m"
            limits:
              memory: "1Gi"
              cpu: "1500m"
        {{- range $consumer := .Values.app.consumers }}
        - name: {{ $consumer }}
          envFrom:
          - configMapRef:
              name: {{ $.Values.app.name }}-config
          image: "10.10.10.199:5000/typescript/nx/consumer:latest"
          command: ["sh", "-c", ". /vault/secrets/init && npx serve -s {{ $consumer }}"]
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "100Mi"
              cpu: "100m"
        {{- end }}
      restartPolicy: Always
status: {}