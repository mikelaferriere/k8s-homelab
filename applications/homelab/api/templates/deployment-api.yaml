---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: {{ .Values.app.name }}
  name: {{ .Values.app.name }}
spec:
  replicas: 3
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 5
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      annotations:
        diun.enable: "false"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: internal-app
        # vault.hashicorp.com/agent-inject-secret-defined: kv/data/secrets/homelab
        vault.hashicorp.com/agent-inject-template-init: |
          {{`{{- with secret "kv/data/secrets/homelab" -}}
            {{- range $key, $value := .Data.data }}
            export {{ $key }}={{ $value }}
            {{- end }}
          {{- end }}`}}
      labels:
        app: {{ .Values.app.name }}
    spec:
      initContainers:
        - name: flyway-migrations
          image: 10.10.10.199:5000/migrations/api
          command: 
            - "flyway"
            - "-user=postgres"
            - "-password=postgres"
            - "-locations=migrations"
            - "-url=jdbc:postgresql://postgresql:5432/postgres"
            - "migrate"
      containers:
        - name: {{ .Values.app.name }}
          envFrom:
          - configMapRef:
              name: {{ .Values.app.name }}-config
          image: 10.10.10.199:5000/typescript/nx/{{ .Values.app.name }}:latest
          command: ["sh", "-c", ". /vault/secrets/init && node /app/index.js"]
          livenessProbe:
            tcpSocket:
              port: {{ .Values.app.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            tcpSocket:
              port: {{ .Values.app.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
          ports:
            - containerPort: {{ .Values.app.port }}
          resources:
            requests:
              memory: 150Mi
              cpu: 100m
            limits:
              memory: 300Mi
              cpu: 200m
      restartPolicy: Always
status: {}